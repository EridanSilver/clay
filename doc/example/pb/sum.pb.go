// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sum.proto

package sumpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SumRequest is a request for Summator service.
type SumRequest struct {
	// A is the number we're adding to. Can't be zero for the sake of example.
	A int64 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	// B is the number we're adding.
	B                    *NestedB `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sum_068184d1f96ad780, []int{0}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SumRequest) GetB() *NestedB {
	if m != nil {
		return m.B
	}
	return nil
}

type SumResponse struct {
	Sum                  int64    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sum_068184d1f96ad780, []int{1}
}
func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (dst *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(dst, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *SumResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type NestedB struct {
	B                    int64    `protobuf:"varint,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NestedB) Reset()         { *m = NestedB{} }
func (m *NestedB) String() string { return proto.CompactTextString(m) }
func (*NestedB) ProtoMessage()    {}
func (*NestedB) Descriptor() ([]byte, []int) {
	return fileDescriptor_sum_068184d1f96ad780, []int{2}
}
func (m *NestedB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedB.Unmarshal(m, b)
}
func (m *NestedB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedB.Marshal(b, m, deterministic)
}
func (dst *NestedB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedB.Merge(dst, src)
}
func (m *NestedB) XXX_Size() int {
	return xxx_messageInfo_NestedB.Size(m)
}
func (m *NestedB) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedB.DiscardUnknown(m)
}

var xxx_messageInfo_NestedB proto.InternalMessageInfo

func (m *NestedB) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "sumpb.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "sumpb.SumResponse")
	proto.RegisterType((*NestedB)(nil), "sumpb.NestedB")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SummatorClient is the client API for Summator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SummatorClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
}

type summatorClient struct {
	cc *grpc.ClientConn
}

func NewSummatorClient(cc *grpc.ClientConn) SummatorClient {
	return &summatorClient{cc}
}

func (c *summatorClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/sumpb.Summator/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SummatorServer is the server API for Summator service.
type SummatorServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
}

func RegisterSummatorServer(s *grpc.Server, srv SummatorServer) {
	s.RegisterService(&_Summator_serviceDesc, srv)
}

func _Summator_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummatorServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sumpb.Summator/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummatorServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Summator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sumpb.Summator",
	HandlerType: (*SummatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Summator_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sum.proto",
}

func init() { proto.RegisterFile("sum.proto", fileDescriptor_sum_068184d1f96ad780) }

var fileDescriptor_sum_068184d1f96ad780 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2e, 0xcd, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x2e, 0xcd, 0x2d, 0x48, 0x92, 0x92, 0x49, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c,
	0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x52, 0xb2, 0xe0, 0xe2, 0x0a, 0x2e, 0xcd, 0x0d, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e,
	0x62, 0x4c, 0x14, 0x92, 0xe1, 0x62, 0x4c, 0x92, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x36, 0xe2, 0xd3,
	0x03, 0x1b, 0xa6, 0xe7, 0x97, 0x5a, 0x5c, 0x92, 0x9a, 0xe2, 0x14, 0xc4, 0x98, 0xa4, 0x64, 0xca,
	0xc5, 0x0d, 0xd6, 0x59, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc0, 0xc5, 0x5c, 0x5c, 0x9a,
	0x0b, 0xd5, 0x0c, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0xa6, 0x16, 0x15, 0xe5, 0x17, 0x81, 0x8d, 0xe0,
	0x0c, 0x82, 0x70, 0x94, 0xc4, 0xb9, 0xd8, 0xa1, 0x86, 0x80, 0x6c, 0x4b, 0x82, 0xd9, 0x96, 0x64,
	0xe4, 0xc0, 0xc5, 0x11, 0x5c, 0x9a, 0x9b, 0x9b, 0x58, 0x92, 0x5f, 0x24, 0x64, 0xc2, 0xc5, 0x1c,
	0x5c, 0x9a, 0x2b, 0x24, 0x08, 0xb5, 0x15, 0xe1, 0x42, 0x29, 0x21, 0x64, 0x21, 0x88, 0xd5, 0x4a,
	0x6c, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x62, 0x70, 0x62, 0x8f, 0x82, 0x78, 0x39, 0x89, 0x0d, 0xec,
	0x37, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x4a, 0xeb, 0xdf, 0x0d, 0x01, 0x00, 0x00,
}
