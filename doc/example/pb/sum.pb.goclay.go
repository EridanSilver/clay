// Code generated by protoc-gen-goclay
// source: sum.proto
// DO NOT EDIT!

/*
Package sumpb is a self-registering gRPC and JSON+Swagger service definition.

It conforms to the github.com/utrack/clay Service interface.
*/
package sumpb

import (
	"net/http"
	"strings"

	"github.com/pkg/errors"
	"github.com/utrack/clay/transport"
	"github.com/utrack/clay/transport/httpruntime"
	"google.golang.org/grpc"
)

// Update your shared lib or downgrade generator to v1 if there's an error
var _ = transport.IsVersion2

// SummatorDesc is a descriptor/registrator for the SummatorServer.
type SummatorDesc struct {
	svc SummatorServer
}

// NewSummatorServiceDesc creates new registrator for the SummatorServer.
func NewSummatorServiceDesc(svc SummatorServer) *SummatorDesc {
	return &SummatorDesc{svc: svc}
}

// RegisterGRPC implements service registrator interface.
func (d *SummatorDesc) RegisterGRPC(s *grpc.Server) {
	RegisterSummatorServer(s, d.svc)
}

// SwaggerDef returns this file's Swagger definition.
func (d *SummatorDesc) SwaggerDef() []byte {
	return _swaggerDef_sum_proto
}

// RegisterHTTP registers this service's HTTP handlers/bindings.
func (d *SummatorDesc) RegisterHTTP(mux transport.Router) {

	// Handlers for Sum

	mux.MethodFunc("/"+pattern_goclay_Summator_Sum_0, "POST", func(w http.ResponseWriter, r *http.Request) {
		defer r.Body.Close()

		var req SumRequest

		inbound, outbound := httpruntime.MarshalerForRequest(r)
		err := inbound.Unmarshal(r.Body, &req)
		if err != nil {
			httpruntime.SetError(r.Context(), r, w, errors.Wrap(err, "couldn't read request JSON"))
			return
		}

		ret, err := d.svc.Sum(r.Context(), &req)
		if err != nil {
			httpruntime.SetError(r.Context(), r, w, errors.Wrap(err, "returned from handler"))
			return
		}

		w.Header().Set("Content-Type", outbound.ContentType())
		err = outbound.Marshal(w, ret)
		if err != nil {
			httpruntime.SetError(r.Context(), r, w, errors.Wrap(err, "couldn't write response"))
			return
		}
	})

}

var _swaggerDef_sum_proto = []byte(`{
  "swagger": "2.0",
  "info": {
    "title": "sum.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/example/sum": {
      "post": {
        "operationId": "Sum",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/sumpbSumResponse"
            }
          },
          "default": {
            "description": "Error object is returned on error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error string."
                },
                "data": {
                  "type": "object",
                  "description": "Freeform auxilliary data set of string-string."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sumpbSumRequest"
            }
          }
        ],
        "tags": [
          "Summator"
        ]
      }
    }
  },
  "definitions": {
    "sumpbSumRequest": {
      "type": "object",
      "properties": {
        "a": {
          "type": "string",
          "format": "int64",
          "description": "A is the number we're adding to. Can't be zero for the sake of example."
        },
        "b": {
          "type": "string",
          "format": "int64",
          "description": "B is the number we're adding."
        }
      },
      "description": "SumRequest is a request for Summator service."
    },
    "sumpbSumResponse": {
      "type": "object",
      "properties": {
        "sum": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}

`)

var (
	pattern_goclay_Summator_Sum_0 = strings.Join([]string{"v1", "example", "sum"}, "/")
)
